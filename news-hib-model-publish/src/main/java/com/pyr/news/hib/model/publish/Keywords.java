package com.pyr.news.hib.model.publish;

// Generated Nov 17, 2014 4:00:34 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Keywords generated by hbm2java
 */
@Entity
@Table(name = "keywords", catalog = "demo_news")
public class Keywords implements java.io.Serializable {

	private Integer id;
	private String keyword;
	private String description;
	private Set<Article> articles = new HashSet(0);

	public Keywords() {
	}

	public Keywords(String keyword) {
		this.keyword = keyword;
	}

	public Keywords(String keyword, String description, Set<Article> articles) {
		this.keyword = keyword;
		this.description = description;
		this.articles = articles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "keyword", nullable = false)
	public String getKeyword() {
		return this.keyword;
	}

	public void setKeyword(String keyword) {
		this.keyword = keyword;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_keywords", catalog = "demo_news", joinColumns = { @JoinColumn(name = "keyword_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) })
	public Set<Article> getArticles() {
		return this.articles;
	}

	public void setArticles(Set<Article> articles) {
		this.articles = articles;
	}

}
