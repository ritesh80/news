package com.pyr.news.hib.model.publish;

// Generated Nov 17, 2014 4:00:34 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Article generated by hbm2java
 */
@Entity
@Table(name = "article", catalog = "demo_news")
public class Article implements java.io.Serializable {

	private int id;
	private ArticleStory articleStory;
	private String title;
	private String headline;
	private String summary;
	private String status;
	private int createdBy;
	private String privacyLevel;
	private Integer priority;
	private byte frontpage;
	private Date modifiedAt;
	private Set<Keywords> keywordses = new HashSet(0);
	private Set<Category> categories = new HashSet(0);
	private Set<Attachment> attachments = new HashSet(0);
	private Set<Article> articlesForArticleId = new HashSet(0);
	private Set<Article> articlesForReferenceArtId = new HashSet(0);
	private Set<Section> sections = new HashSet(0);

	public Article() {
	}

	public Article(int id, String title, String headline, String status,
			int createdBy, String privacyLevel, byte frontpage, Date modifiedAt) {
		this.id = id;
		this.title = title;
		this.headline = headline;
		this.status = status;
		this.createdBy = createdBy;
		this.privacyLevel = privacyLevel;
		this.frontpage = frontpage;
		this.modifiedAt = modifiedAt;
	}

	public Article(int id, ArticleStory articleStory, String title,
			String headline, String summary, String status, int createdBy,
			String privacyLevel, Integer priority, byte frontpage,
			Date modifiedAt, Set keywordses, Set categories, Set attachments,
			Set articlesForArticleId, Set articlesForReferenceArtId,
			Set sections) {
		this.id = id;
		this.articleStory = articleStory;
		this.title = title;
		this.headline = headline;
		this.summary = summary;
		this.status = status;
		this.createdBy = createdBy;
		this.privacyLevel = privacyLevel;
		this.priority = priority;
		this.frontpage = frontpage;
		this.modifiedAt = modifiedAt;
		this.keywordses = keywordses;
		this.categories = categories;
		this.attachments = attachments;
		this.articlesForArticleId = articlesForArticleId;
		this.articlesForReferenceArtId = articlesForReferenceArtId;
		this.sections = sections;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "story_id")
	public ArticleStory getArticleStory() {
		return this.articleStory;
	}

	public void setArticleStory(ArticleStory articleStory) {
		this.articleStory = articleStory;
	}

	@Column(name = "title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "headline", nullable = false)
	public String getHeadline() {
		return this.headline;
	}

	public void setHeadline(String headline) {
		this.headline = headline;
	}

	@Column(name = "summary", length = 1000)
	public String getSummary() {
		return this.summary;
	}

	public void setSummary(String summary) {
		this.summary = summary;
	}

	@Column(name = "status", nullable = false, length = 15)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "createdBy", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "privacy_level", nullable = false, length = 29)
	public String getPrivacyLevel() {
		return this.privacyLevel;
	}

	public void setPrivacyLevel(String privacyLevel) {
		this.privacyLevel = privacyLevel;
	}

	@Column(name = "priority")
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

	@Column(name = "frontpage", nullable = false)
	public byte getFrontpage() {
		return this.frontpage;
	}

	public void setFrontpage(byte frontpage) {
		this.frontpage = frontpage;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_at", nullable = false, length = 19)
	public Date getModifiedAt() {
		return this.modifiedAt;
	}

	public void setModifiedAt(Date modifiedAt) {
		this.modifiedAt = modifiedAt;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_keywords", catalog = "demo_news", joinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "keyword_id", nullable = false, updatable = false) })
	public Set<Keywords> getKeywordses() {
		return this.keywordses;
	}

	public void setKeywordses(Set<Keywords> keywordses) {
		this.keywordses = keywordses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_category", catalog = "demo_news", joinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "category_id", nullable = false, updatable = false) })
	public Set<Category> getCategories() {
		return this.categories;
	}

	public void setCategories(Set<Category> categories) {
		this.categories = categories;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_attachement", catalog = "demo_news", joinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "attachment_id", nullable = false, updatable = false) })
	public Set<Attachment> getAttachments() {
		return this.attachments;
	}

	public void setAttachments(Set<Attachment> attachments) {
		this.attachments = attachments;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_reflink", catalog = "demo_news", joinColumns = { @JoinColumn(name = "reference_artId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) })
	public Set<Article> getArticlesForArticleId() {
		return this.articlesForArticleId;
	}

	public void setArticlesForArticleId(Set<Article> articlesForArticleId) {
		this.articlesForArticleId = articlesForArticleId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_reflink", catalog = "demo_news", joinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "reference_artId", nullable = false, updatable = false) })
	public Set<Article> getArticlesForReferenceArtId() {
		return this.articlesForReferenceArtId;
	}

	public void setArticlesForReferenceArtId(Set<Article> articlesForReferenceArtId) {
		this.articlesForReferenceArtId = articlesForReferenceArtId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article_section", catalog = "demo_news", joinColumns = { @JoinColumn(name = "article_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "section_id", nullable = false, updatable = false) })
	public Set<Section> getSections() {
		return this.sections;
	}

	public void setSections(Set<Section> sections) {
		this.sections = sections;
	}

}
